/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tool1;

import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.*;
import java.net.*;
import java.util.Base64;
import javax.imageio.*;
import javax.swing.*;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

public class MainForm extends javax.swing.JFrame {

    static int index = 0;
    
    public MainForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Label_image = new javax.swing.JLabel();
        Input_image = new javax.swing.JTextField();
        Download_btn = new javax.swing.JButton();
        Label_image_status = new javax.swing.JLabel();
        Url_of_a_web = new javax.swing.JTextField();
        exe_loadpage_btn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Content_of_page = new javax.swing.JTextArea();
        Tittle_of_web = new javax.swing.JLabel();
        GetDe = new javax.swing.JButton();
        Url_of_de = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Label_image.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Label_image.setText("Tải hình ảnh");

        Download_btn.setText("Download");
        Download_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Dowload_Image(evt);
            }
        });

        Label_image_status.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Label_image_status.setText("URL");

        exe_loadpage_btn.setText("LoadPage");
        exe_loadpage_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LoadPage(evt);
            }
        });

        Content_of_page.setColumns(20);
        Content_of_page.setRows(5);
        jScrollPane1.setViewportView(Content_of_page);

        Tittle_of_web.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Tittle_of_web.setText("Xổ số ");

        GetDe.setText("GetDe");
        GetDe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GetDeMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Label_image_status, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Label_image, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .addComponent(Tittle_of_web, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Url_of_a_web, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Input_image, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Url_of_de, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Download_btn, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(exe_loadpage_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(GetDe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Label_image, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Input_image, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Download_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Label_image_status, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(Url_of_a_web)
                    .addComponent(exe_loadpage_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Tittle_of_web, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(GetDe, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Url_of_de))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Dowload_Image(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Dowload_Image
        String url = Input_image.getText();
        
        if (url.startsWith("http:") || url.startsWith("https:")) {
            
        try {                      
            // Create a url 
            URL imageUrl = new URL(url);
            
            // Read the image data from the specified URL and return a BufferedImage object
            BufferedImage image = ImageIO.read(imageUrl);

            // Create the "Image" folder if it doesn't exist
            File folder = new File("Image");
            if (!folder.exists()) {
                folder.mkdir();
            }
        
            // Set fileName
            String fileName = imageUrl.getFile().substring(imageUrl.getFile().lastIndexOf("/") + 1);

            // Concatenate the path of the specified folder and the name of the downloaded image file
            File file = new File(folder.getPath() + "/" + fileName);

            // Write the BufferedImage object image to a file
            ImageIO.write(image, "jpg", file);     
            JOptionPane.showMessageDialog(this, "Download completed!");           
                } 
            catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Error downloading image:\n" + ex.getMessage());
                }
        }
        
        else if (url.startsWith("data:image/jpeg;base64")) {
            String[] parts = url.split(",");
            String mimeType = parts[0].split(":")[1];
            String data = parts[1];

            byte[] bytes = Base64.getDecoder().decode(data);
            String fileName = "image.jpg"; // Change the file name and extension as needed
            File file = new File("Image", fileName);

            try {
                FileOutputStream fos = new FileOutputStream(file);
                fos.write(bytes);
                fos.close();
                JOptionPane.showMessageDialog(this, "Download completed!");
                } 
            catch (IOException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_Dowload_Image

    private void LoadPage(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoadPage
        String surl = Url_of_a_web.getText();
        try{
        URL url = new URL(surl);
        URLConnection conn = url.openConnection();
        conn.connect();        
        InputStreamReader isr = new InputStreamReader(conn.getInputStream(),"UTF8");
        BufferedReader bf = new BufferedReader(isr);
        String cline = "";
        while(true){
            String line = bf.readLine();
            if(line != null){
                cline += line + "\n";
                Content_of_page.setText(cline); 
            }
            else{
                break;
            }
        }
        
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_LoadPage

    private void GetDeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GetDeMouseClicked
        String url_of_de = Url_of_de.getText();
        
        try{
            // Connect to the website and get the HTML
            Document doc = Jsoup.connect(url_of_de).userAgent("Mozilla").get();
            
            // Get the div elements with class "link"
            Element site_link_class = doc.getElementsByClass("site-link").get(0);
            Element a = doc.select("a:contains(XSMB 13/05/2023)").get(0);
            Element title = doc.getElementById("mb_prizeDB_item0");
            String clinkDiv = "";
            // Iterate over the div elements and get the content
            /*for (Element linkDiv : linkDivs) {
                clinkDiv += linkDiv.text() + "\n";
                Content_of_page.setText(clinkDiv);
            }*/
            Content_of_page.setText(a.text() + " " + title.text() );
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_GetDeMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Content_of_page;
    private javax.swing.JButton Download_btn;
    private javax.swing.JButton GetDe;
    private javax.swing.JTextField Input_image;
    private javax.swing.JLabel Label_image;
    private javax.swing.JLabel Label_image_status;
    private javax.swing.JLabel Tittle_of_web;
    private javax.swing.JTextField Url_of_a_web;
    private javax.swing.JTextField Url_of_de;
    private javax.swing.JButton exe_loadpage_btn;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
